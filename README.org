* Static
A static file server inspired by [[https://github.com/vercel/serve][Serve]].

The service considers static files to be immutable by default,
you can set environement varaible =STATIC_FOUND_CACHE_CONTROL= to change it.

** Install
The environment variables =STATIC_HOST= and =STATIC_PORT= can be used to set the address and port that the server listens to.
The default values are localhost and 8080.

#+BEGIN_SRC sh
git clone https://github.com/BlackGlory/static
cd static
yarn install
yarn build
yarn --silent start
#+END_SRC

*** Docker
#+BEGIN_SRC sh
docker run \
  --detach \
  --publish 8080:8080 \
  blackglory/static
#+END_SRC

**** docker-compose.yml
#+BEGIN_SRC yaml
version: '3.8'

services:
  static:
    image: 'blackglory/static'
    restart: always
    environment:
      - 'STATIC_SECRET=secret'
    volumes:
      - 'static-database:/database'
      - 'static-storage:/storage'
    ports:
      - '8080:8080'

volumes:
  static-database:
  static-storage:
#+END_SRC

** API
*** Public
**** get file
=GET /files/:location=

Return the file relative environment =STATIC_STORAGE/files= directory.

** Cache
*** STATIC_NOT_FOUND_CACHE_CONTROL
This environment variable is the response header =Cache-Control= when the file is not found.
Default: ~private, no-cache, no-store, max-age=0, must-revalidate~

*** STATIC_FOUND_CACHE_CONTROL
This environment variable is the response header =Cache-Control= when the file is found.
Default: ~public, max-age=31536000, immutable~

** Image processing
Static support image processing, so that users can create responsive images.

The image processing feature works through querystring:
#+BEGIN_SRC typescript
{
  signature: string
  format: 'jpeg' | 'webp'
  quality: integer // 1-100
  maxWidth?: integer
  maxHeight?: integer
  multiple?: float
}
#+END_SRC

The derived images will be cached in =STATIC_STORAGE/derived-images=.

You can disable direct access to images with ~STATIC_DISABLE_ACCESS_TO_ORIGINAL_IMAGES=true~.

** Font processing
Static support font processing, so that users can create subsets of fonts.

The font processing feature works throught querystring:
#+BEGIN_SRC typescript
{
  signature: string
  format: 'woff' | 'woff2'
  subset: string
}
#+END_SRC

The derived fonts will be cached in =STATIC_STORAGE/derived-fonts=.

You can disable direct access to fonts with ~STATIC_DISABLE_ACCESS_TO_ORIGINAL_FONTS=true~.

** Signature
Only users with the =STATIC_SECRET= can create a signature.

Create a signature:
#+BEGIN_SRC typescript
const urlSearchParams = new URLSearchParams(params)
urlSearchParams.sort()
const signature = hmacSHA256(secret, urlSearchParams.toString())
#+END_SRC

** HTTP/2
Static supports HTTP/2 for multiplexed reverse proxy connections,
which can be enabled by setting the environment variable =STATIC_HTTP2=true=.

This HTTP/2 support does not provide an automatic upgrade from HTTP/1.1,
nor does it provide HTTPS.
Therefore, the =--http2-prior-knowledge= option needs to be enabled when testing in local curl.
